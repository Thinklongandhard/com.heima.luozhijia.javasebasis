<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  namespace: 是名称空间
  select id是该条SQL语句的唯一标识，但是在开发过程中，会有很多不同的Mapper配置文件
  每个配置文件中都有对应的select id 的标识，所以我们定义一个名称空间用来指向不同的
  Mapper配置文件中的不同sql标识
-->
<mapper namespace="com.lzj.mapper.BrandMapper">
    <!--  设置resultMap  -->
    <!--  <resultMap id = "该标签的别名" type = "返回值类型">  -->
    <resultMap id="selectWE" type="Brand">
        <result column="company_name" property="companyName"/>
        <result column="brand_name" property="brandName"/>
    </resultMap>



    <!--  多条件查询  -->
<!--    <select id="selectone" resultMap="selectWE">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where status = #{status}-->
<!--          and brand_name = #{brandName}-->
<!--          and company_name = #{companyName};-->
<!--    </select>-->



<!--    <select id="selectone" resultMap="selectWE">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        where status like #{status}-->
<!--          and company_name like #{companyName};-->
<!--    </select>-->


    <!--
       动态SQL查询
    -->
    <!--  使用where标签  -->
<!--    <select id="selectone" resultMap="selectWE">-->
<!--        select *-->
<!--        from tb_brand-->
<!--        <where>-->
<!--            <if test="status != null">-->
<!--                and status like #{status}-->
<!--            </if>-->
<!--            <if test="brand_name != null and brand_name != ''">-->
<!--                and brand_name = #{brandName}-->
<!--            </if>-->
<!--            <if test="brand_name != null and brand_name != ''">-->
<!--                and company_name = #{companyName};-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->


    <!--  单条件查询  -->
    <select id="selectother" resultMap="selectWE">
        select *
        from tb_brand
        <where>
            <choose>
                <when test="status != null">
                    status = #{status}
                </when>
                <when test="brandName != null and brandName != ''">
                    brand_name like #{brandName}
                </when>
                <when test="companyName != null and companyName != ''">
                    company_name like #{companyName}
                </when>
            </choose>
        </where>
    </select>





    <select id="selecttwo" resultMap="selectWE">
        select *
        from tb_brand;
    </select>


    <!--  动态修改数据  -->
    <update id="Update">
        update tb_brand
        <set>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description}
            </if>
        </set>
        where
          id = #{id};
    </update>


    <!--  批量删除数据  -->
    <delete id="deleteById">
        delete
        from tb_brand
        where  id in
            <!-- collection是数组名，遍历数组，mybatis在封装数组时使用的是map集合，默认key是array，value是我们要遍历的数组名
                 我们可以通过@Param来更改map集合的key名称
                 item是遍历出来的数据
                 separator是分隔符
                 open是开始时拼接一个什么
                 close是结束时拼接一个什么
             -->
            <foreach collection="ids" item="id" separator="," open="(" close=")">
                #{id}
            </foreach>
            ;
    </delete>
</mapper>